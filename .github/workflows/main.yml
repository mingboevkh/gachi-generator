# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  CheckCodeStyle:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Check project code style
        run: |
          sudo apt update
          sudo apt install python3-pip-y
          pip3 install flake8
          python3 -m flake8 ./ --ignore=F401,E402
      # Runs a set of commands using the runners shell
  BuildAppAndPublishIt:
    runs-on: ubuntu-latest
    needs: CheckCodeStyle
    steps:
     - name: 'Create env file'
       run: |
          touch .env
          echo TOKEN=${{ secrets.GACHI_TOKEN }} >> .env
          cat .env
     - name: Login to docker.io
       run:  echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_LOGIN }} --password-stdin
     - uses: actions/checkout@master
     - name: Build image
       run: docker build -t mingboevkh/gachi-generator:$GITHUB_RUN_ID -f Dockerfile .
     - name: Push image to docker.io
       run: docker push mingboevkh/gachi-generator:$GITHUB_RUN_ID
  DeployingNow:
    runs-on: ubuntu-latest
    needs: BuildAppAndPublishIt
    steps:
      - name: 'Create env file'
        run: |
          touch .env
          echo TOKEN=${{ secrets.GACHI_TOKEN }} >> .env
          cat .env
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "gachi-generator" 
          heroku_email: ${{secrets.HEROKU_EMAIL}}
